# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [released]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: |
          poetry config virtualenvs.in-project false
          poetry config cache-dir ~/cache/.poetry
          poetry config pypi-token.pypi "${{ secrets.API_TOKEN_PYPI }}"
          poetry version ${{ github.ref_name }}
      - name: Install dependencies
        run: poetry install --with docs
      - name: Build HTML
        run: poetry run sphinx-build -a -E docs/source/ docs/build
      - name: Upload artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: html-docs
          path: docs/build
      - name: Deploy pages
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build
      - name: Publish package
        run: poetry publish --build
