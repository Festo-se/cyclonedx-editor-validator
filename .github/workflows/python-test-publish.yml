# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pre-release Python Package

on:
  release:
    types: [prereleased]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: |
          poetry config virtualenvs.in-project false
          poetry config cache-dir ~/cache/.poetry
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.API_TOKEN_TEST_PYPI }}
          poetry version ${{ github.ref_name }}
      - name: Publish package
        run: |
          poetry version --dry-run
          poetry publish --build -r testpypi
