# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: tests

on:
  workflow_call:

jobs:
  test_pages:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: '3.9'
          cache: 'poetry'
      - run: |
          poetry config virtualenvs.in-project false
          poetry config cache-dir ~/cache/.poetry
      - name: Install dependencies
        run: poetry install --only docs
      - name: Test pages
        run: poetry run mkdocs build

  static_analysis:

      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: install poetry
        run: pipx install poetry==1.8.3
      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: '3.9'
          cache: 'poetry'
      - name: Install dependencies from poetry
        run: poetry install --no-root
      - name: Run black
        run: poetry run black cdxev tests --check
      - name: Run isort
        run: poetry run isort cdxev/ tests/ --check-only --profile black
      - name: Run flake8
        run: poetry run flake8 cdxev tests
      - name: Run mypy
        run: poetry run mypy --install-types --non-interactive --config-file=pyproject.toml
      - name: Run bandit
        run: poetry run bandit -r cdxev tests

  pytest:
    runs-on: ubuntu-latest

    needs: static_analysis

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: install poetry
      run: pipx install poetry==1.8.3
    - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
      with:
        python-version: '3.9'
        cache: 'poetry'
    - name: Install package
      run: poetry install
    - name: Run pytest
      run: poetry run coverage run -m pytest --junitxml=reports/unittest.xml
    - name: Check coverage
      run: poetry run coverage report --fail-under=99
    - name: Save test results
      run: poetry run coverage xml -o reports/py-coverage.cobertura.xml
    - name: Archive test results
      uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
      with:
        name: test-report
        path: reports/unittest.xml
    - name: Archive code coverage results
      uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
      with:
        name: code-coverage-report
        path: reports/py-coverage.cobertura.xml
    - name: Coverage commit
      if: ${{ success() && GITHUB.EVENT_NAME == 'pull_request' && !github.event.pull_request.head.repo.fork }}
      uses: MishaKav/pytest-coverage-comment@fa1c641d7e3fa1d98ed95d5f658ccd638b774628 # v1.1.52
      with:
        junitxml-path: reports/unittest.xml
        pytest-xml-coverage-path: reports/py-coverage.cobertura.xml
        report-only-changed-files: true
