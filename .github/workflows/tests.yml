# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: tests

on:
  workflow_call:

jobs:
  static_analysis:

      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
      - name: install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'poetry'
      - name: Install dependencies from poetry
        run: poetry install --no-root
      - name: Install and run black
        run: |
          python -m pip install black
          python -m black cdxev tests --check
      - name: Run isort
        run: poetry run isort cdxev/ tests/ --check-only --profile black
      - name: Install and run flake8
        run: |
          python -m pip install flake8
          python -m flake8 cdxev tests
      - name: Run mypy
        run: poetry run mypy --install-types --non-interactive --config-file=pyproject.toml
      - name: Run bandit
        run: poetry run bandit -r cdxev tests

  pytest:
    runs-on: ubuntu-latest
    
    needs: static_analysis

    steps:
    - uses: actions/checkout@v3
    - name: install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'poetry'
    - name: Install package
      run: poetry install
    - name: Run pytest
      run: |
        poetry run coverage run -m pytest --junitxml=reports/unittest.xml
        poetry run coverage report
        poetry run coverage xml -o reports/py-coverage.cobertura.xml
    - name: Archive test results
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: reports/unittest.xml
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: reports/py-coverage.cobertura.xml
    - name: Coverage commit
      if: ${{ success() && GITHUB.EVENT_NAME == 'pull_request' && !github.event.pull_request.head.repo.fork }}
      uses: MishaKav/pytest-coverage-comment@main
      with:
        junitxml-path: reports/unittest.xml
        pytest-xml-coverage-path: reports/py-coverage.cobertura.xml
        report-only-changed-files: true

