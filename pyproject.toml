[tool.poetry]
name = "cyclonedx-editor-validator"
version = "0.0.0"
description = "Tool for creating, modifying and validating CycloneDX SBOMs."
authors = [
    "Aleg Vilinski <aleg.vilinski@festo.com>",
    "Christian Beck <christian.beck@festo.com>",
    "Moritz Marseu <moritz.marseu@festo.com>",
]
license = "GPL-3.0-or-later"
readme = "README.md"
packages = [{ include = "cdxev" }]

[tool.poetry.urls]
Documentation = 'https://festo-se.github.io/cyclonedx-editor-validator/'
Repository = 'https://github.com/Festo-se/cyclonedx-editor-validator/'
Issues = 'https://github.com/Festo-se/cyclonedx-editor-validator/issues'
Changelog = 'https://github.com/Festo-se/cyclonedx-editor-validator/releases'

[tool.poetry.scripts]
cdx-ev = "cdxev.__main__:main"

[tool.poetry.dependencies]
python = "^3.10.0"
python-dateutil = "2.9.0.post0"
jsonschema = { version = "4.24.0", extras = ["format"] }
docstring-parser = "^0.16"
charset-normalizer = "^3.3.2"
pyicu = [
    { version = "^2.13.1", platform = "darwin" },
    { version = "^2.13.1", platform = "linux" },
]
natsort = "^8.4.0"
univers = "30.12.1"
cyclonedx-python-lib = "10.1.0"

[tool.poetry.group.dev.dependencies]
flake8 = "7.2.0"
black = "25.1.0"
pep8-naming = "0.15.1"
mypy = "1.15.0"
types-python-dateutil = "2.9.0.20250516"
types-jsonschema = "4.24.0.20250528"
pytest = "8.4.0"
coverage = "7.8.2"
pytest-subtests = "0.14.1"
toml = "0.10.2"
typing-extensions = "4.13.2"
bandit = { version = "1.8.3", extras = ["toml"] }
isort = "6.0.1"
pre-commit = "4.2.0"

[tool.poetry.group.docs.dependencies]
sphinx-argparse = "0.5.2"
sphinx-rtd-theme = "3.0.2"
sphinx = "8.1.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variable = ["pyproject.toml:version"]
branch = "master"
upload_to_repository = false
upload_to_release = false
build_command = "pip install poetry && poetry build"

[tool.mypy]
python_version = "3.10"
packages = "cdxev"
# Excludes tests even when mypy is invoked with a path (as the VS Code extension does, for instance)
exclude = ['tests/']
strict = true

# Allow generic types for certain files
[[tool.mypy.overrides]]
module = [
    "cdxev.merge",
    "cdxev.set",
    "cdxev.amend.operations",
    "cdxev.amend.license",
    "cdxev.amend.command",
    "cdxev.__main__",
    "cdxev.validator.helper",
    "cdxev.validator.validate",
    "cdxev.auxiliary.io_processing",
    "cdxev.auxiliary.sbomFunctions",
    "cdxev.auxiliary.filename_gen",
    "cdxev.auxiliary.identity",
    "cdxev.validator.customreports",
    "cdxev.build_public_bom"
]
disallow_any_generics = false

[[tool.mypy.overrides]]
module = [
    "cdxev.__main__",
]
warn_return_any = false

[tool.coverage.run]
source = ["cdxev"]

[tool.coverage.report]
omit = ["*__init__.py*"]

[tool.black]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.isort]
profile = "black"
