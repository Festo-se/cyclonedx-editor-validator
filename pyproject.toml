[project]
name = "cyclonedx-editor-validator"
version = "0.0.0"
description = "Tool for creating, modifying and validating CycloneDX SBOMs."
authors = [
    { name = "Aleg Vilinski", email = "aleg.vilinski@festo.com" },
    { name = "Christian Beck", email = "christian.beck@festo.com" },
    { name = "Moritz Marseu", email = "moritz.marseu@festo.com" },
]
requires-python = ">=3.10.0,<4"
readme = "README.md"
license = "GPL-3.0-or-later"
dependencies = [
    "python-dateutil==2.9.0.post0",
    "jsonschema[format]==4.25.1",
    "docstring-parser>=0.16,<0.18",
    "charset-normalizer>=3.3.2,<4",
    "pyicu>=2.13.1,<3 ; sys_platform == 'darwin'",
    "pyicu>=2.13.1,<3 ; sys_platform == 'linux'",
    "natsort>=8.4.0,<9",
    "univers==31.1.0",
    "cyclonedx-python-lib==11.1.0",
    "email-validator (>=2.2.0,<3.0.0)",
]

[project.urls]
Documentation = "https://festo-se.github.io/cyclonedx-editor-validator/"
Repository = "https://github.com/Festo-se/cyclonedx-editor-validator/"
Issues = "https://github.com/Festo-se/cyclonedx-editor-validator/issues"
Changelog = "https://github.com/Festo-se/cyclonedx-editor-validator/releases"

[project.scripts]
cdx-ev = "cdxev.__main__:main"

[dependency-groups]
dev = [
    "flake8==7.3.0",
    "black==25.9.0",
    "pep8-naming==0.15.1",
    "mypy==1.18.2",
    "types-python-dateutil==2.9.0.20250822",
    "types-jsonschema==4.25.1.20250822",
    "pytest==8.4.2",
    "coverage==7.10.6",
    "pytest-subtests==0.14.2",
    "toml==0.10.2",
    "typing-extensions==4.15.0",
    "bandit[toml]==1.8.6",
    "isort==6.0.1",
    "pre-commit==4.3.0",
]
docs = [
    "sphinx-argparse==0.5.2",
    "sphinx-rtd-theme==3.0.2",
    "sphinx==8.1.3",
]

[tool.uv]
default-groups = [
    "dev",
    "docs",
]
required-version = ">=0.7.0"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["cdxev"]

[tool.semantic_release]
version_variable = ["pyproject.toml:version"]
branch = "master"
upload_to_repository = false
upload_to_release = false
build_command = "pip install uv && uv build"

[tool.mypy]
python_version = "3.10"
packages = "cdxev"
# Excludes tests even when mypy is invoked with a path (as the VS Code extension does, for instance)
exclude = ['tests/']
strict = true

[[tool.mypy.overrides]]
module = [
    "cdxev.merge",
    "cdxev.set",
    "cdxev.amend.operations",
    "cdxev.amend.license",
    "cdxev.amend.command",
    "cdxev.__main__",
    "cdxev.validator.helper",
    "cdxev.validator.validate",
    "cdxev.auxiliary.io_processing",
    "cdxev.auxiliary.sbomFunctions",
    "cdxev.auxiliary.filename_gen",
    "cdxev.auxiliary.identity",
    "cdxev.validator.customreports",
    "cdxev.build_public_bom"
]
disallow_any_generics = false

[[tool.mypy.overrides]]
module = [
    "cdxev.__main__",
]
warn_return_any = false

[tool.coverage.run]
source = ["cdxev"]

[tool.coverage.report]
omit = ["*__init__.py*"]

[tool.black]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.isort]
profile = "black"
